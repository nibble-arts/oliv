commit b53c617f2d9eef82f39fc88992ac14ec0016f056
Author: Thomas Winkler <thomas.winkler@iggmp.net>
Date:   Thu Jul 26 20:55:49 2012 +0200

    Signed-off-by: Thomas Winkler <thomas.winkler@iggmp.net>

diff --git a/admin/module/article/content/index.xml b/admin/module/article/content/index.xml
index af9b684..9213588 100644
--- a/admin/module/article/content/index.xml
+++ b/admin/module/article/content/index.xml
@@ -1,27 +1,27 @@
 <?xml version='1.0' encoding='utf8'?>
 
 <article>
-  <h2 owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX001</h2>
-    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX002</p>
-    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX003</p>
-    <ul owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>
-      <li owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX004</li>
-      <li owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX005</li>
-      <li owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX006</li>
-      <li owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX007</li>
-      <li owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX008</li>
+  <h2 owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX001</h2>
+    <p owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX002</p>
+    <p owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX003</p>
+    <ul owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>
+      <li owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX004</li>
+      <li owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX005</li>
+      <li owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX006</li>
+      <li owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX007</li>
+      <li owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX008</li>
     </ul>
-  <h3 owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX009</h3>
-    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX010</p>
-    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX011</p>
-    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX012</p>
-  <h3 owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX013</h3>
-    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX014</p>
-  <h3 owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX015</h3>
-    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX016</p>
-    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX017</p>
-  <h3 owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX018</h3>
-    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX019</p>
+  <h3 owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX009</h3>
+    <p owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX010</p>
+    <p owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX011</p>
+    <p owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX012</p>
+  <h3 owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX013</h3>
+    <p owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX014</p>
+  <h3 owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX015</h3>
+    <p owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX016</p>
+    <p owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX017</p>
+  <h3 owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX018</h3>
+    <p owner='tom' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX019</p>
 
-<!--    <p><daba owner='admin' group='admin' access='770'>field:name</daba></p>-->
+<!--    <p><daba owner='tom' group='admin' access='770'>field:name</daba></p>-->
 </article>
diff --git a/admin/module/article/content/index.xml~ b/admin/module/article/content/index.xml~
new file mode 100644
index 0000000..af9b684
--- /dev/null
+++ b/admin/module/article/content/index.xml~
@@ -0,0 +1,27 @@
+<?xml version='1.0' encoding='utf8'?>
+
+<article>
+  <h2 owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX001</h2>
+    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX002</p>
+    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX003</p>
+    <ul owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>
+      <li owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX004</li>
+      <li owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX005</li>
+      <li owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX006</li>
+      <li owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX007</li>
+      <li owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX008</li>
+    </ul>
+  <h3 owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX009</h3>
+    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX010</p>
+    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX011</p>
+    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX012</p>
+  <h3 owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX013</h3>
+    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX014</p>
+  <h3 owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX015</h3>
+    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX016</p>
+    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX017</p>
+  <h3 owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX018</h3>
+    <p owner='admin' group='admin' access='444' lang='de_DE' index='1336633758'>ARTICLE_INDEX019</p>
+
+<!--    <p><daba owner='admin' group='admin' access='770'>field:name</daba></p>-->
+</article>
diff --git a/library/plugin.php b/library/plugin.php
index f02a683..e219e2f 100644
--- a/library/plugin.php
+++ b/library/plugin.php
@@ -78,7 +78,6 @@ class OLIVPlugin
       OLIVCore::loadScript($pluginScript . ".php",OLIV_PLUGIN_PATH . $pluginScript . "/");
 
 
-//echoall($options);
 // call script and return output
       if (class_exists($class))
         return ($class::$func($options));
@@ -144,4 +143,4 @@ class OLIVPlugin
 
 }
 
-?>
\ No newline at end of file
+?>
diff --git a/library/plugin.php~ b/library/plugin.php~
new file mode 100644
index 0000000..908b082
--- /dev/null
+++ b/library/plugin.php~
@@ -0,0 +1,145 @@
+<?PHP
+//
+// OLIV
+//
+// This file is part of the OLIV Content Management System.
+//
+// Copyright(c) 2012 Thomas H Winkler
+// thomas.winkler@iggmp.net
+//
+// This file may be licensed under the terms of of the
+// GNU General Public License Version 3 (the ``GPL'').
+//
+// Software distributed under the License is distributed
+// on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either
+// express or implied. See the GPL for the specific language
+// governing rights and limitations.
+//
+// You should have received a copy of the GPL along with this
+// program. If not, go to http://www.gnu.org/licenses/gpl.html
+// or write to the Free Software Foundation, Inc.,
+// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+//
+
+//------------------------------------------------------------------------------
+// Preprocessor object
+//
+// Version 0.1
+//------------------------------------------------------------------------------
+
+defined('OLIVCORE') or die ("render.php - OLIVCore not present");
+defined('OLIVERROR') or die ("render.php - OLIVError not present");
+
+$_PLUGIN;
+
+class OLIVPlugin
+{
+  public function __construct()
+  {
+    $this->scan(OLIV_PLUGIN_PATH);
+  }
+
+
+//------------------------------------------------------------------------------
+// call plugin
+// $func ... function name (in render plugin normally the tag name)
+// $type ... type of plugin: render, search, etc.
+
+// $options ... array of options for plugin call
+  static public function call($func,$type,$options = array())
+  {
+    global $_PLUGIN;
+
+    if (isset($_PLUGIN->$type->func->$func))
+    {
+  // get render plugin if registered
+      $plugin = $_PLUGIN->$type->func;
+
+      $pluginScript = (string)$plugin->$func->attributes()->script;
+      
+      $pluginCall = explode("::",(string)$plugin->$func->attributes()->class);
+      $pluginEditCall = explode("::",(string)$plugin->$func->attributes()->editClass);
+
+
+//------------------------------------------------------------------------------
+// check for rights to edit
+// and edit class
+      if (OLIVRight::w($options['template']) and $pluginEditCall[0])
+        $class = $pluginEditCall[0];
+      else
+        $class = $pluginCall[0];
+
+      $func = $pluginCall[1];
+
+//------------------------------------------------------------------------------
+// call render class for tag
+// load plugin script
+      OLIVCore::loadScript($pluginScript . ".php",OLIV_PLUGIN_PATH . $pluginScript . "/");
+
+
+// call script and return output
+      if (class_exists($class))
+        return ($class::$func($options));
+      else
+        OLIVError::fire("OLIVPlugin::call - plugin class $class not found");
+    }
+    else
+      return (FALSE);
+  }
+
+  
+//------------------------------------------------------------------------------
+// scan plugin directory and load plugin metadata
+  private function scan($path)
+  {
+    global $_PLUGIN;
+    $_PLUGIN = new simpleXmlElement("<plugin></plugin>");
+
+    if ($pluginDir = olivopendir ($path))
+    {
+      while ($file = readdir($pluginDir))
+      {
+        if (olivis_dir($path . $file) and $file != "." and $file != "..")
+        {
+          $file .= "/";
+
+      // get define.xml
+          if (olivfile_exists($path . $file . "define.xml"))
+          {
+            $xml = olivxml_load_file($path . $file . "define.xml");
+
+            // get type of plugin
+            $type = $xml->children()->getName();
+
+// type don't exist -> create
+            if ($type != (string)$_PLUGIN->$type->getName())
+            {
+              olivxml_insert($_PLUGIN,$xml);
+            }
+
+// insert or replace functions
+            else
+            {
+              $func = $xml->$type->func;
+
+              foreach ($func->children() as $entry)
+              {
+                olivxml_insert($_PLUGIN->$type->func,$entry);
+              }
+            }
+          }
+        }
+      }
+//echoall($_PLUGIN);
+      closedir ($pluginDir);
+    }
+    else
+      OLIVError::fire("plugin::scan - directory $path not found");
+//print_r($_PLUGIN->asXML());
+  }
+  
+
+
+}
+
+?>
diff --git a/module/article/article.php b/module/article/article.php
index 056a90a..5f93848 100644
--- a/module/article/article.php
+++ b/module/article/article.php
@@ -35,6 +35,7 @@ defined('OLIVERROR') or die ("mod_menu::menu.php - OLIVError not present");
 $_ARTICLES;
 
 
+//------------------------------------------------------------------------------
 class article extends OLIVCore
 {
 	var $o = "";
@@ -52,7 +53,7 @@ class article extends OLIVCore
 
     $this->header = $header;
     $this->header->path = OLIV_MODULE_PATH . "article/";
-
+    
 //    $this->scan();
 
 
@@ -81,35 +82,8 @@ class article extends OLIVCore
       $this->o .= OLIVError::render("article.php - content for <b>'$articleName'</b> not found");
   }
   
-
-
-
-//TODO move to rendering
-//------------------------------------------------------------------------------
-/*
-
-// insert edit field
-
-// get language code of text snippet and mark field if not translated
-						$lang = OLIVText::_($value,"lang");
-
-// call editor
-            if ($this->paramArray[0] == $value)
-            {
-              switch ($this->command)
-              {
-                case 'edit':
-                  if ($this->paramArray[0] == $value)
-                    $o .= $this->editor->open($value,OLIVText::_((string)$value));
-                  break;
-                  
-                case 'save':
-                  $this->editor->saveSnippet($value);
-                  break;
-              }
-            }
-*/  
   
+//------------------------------------------------------------------------------
 // scan session for articles
 // module must be loaded
   private function scan()
diff --git a/module/article/article.php~ b/module/article/article.php~
index ae1718c..b5a74aa 100644
--- a/module/article/article.php~
+++ b/module/article/article.php~
@@ -51,174 +51,42 @@ class article extends OLIVCore
     global $_argv;
 
     $this->header = $header;
-    $this->path = OLIV_MODULE_PATH . "article/";
-    $this->scan();
+    $this->header->path = OLIV_MODULE_PATH . "article/";
+    
+//    $this->scan();
+
 
     // load index file
-    OLIVIndex::load($this->path,"article.idx");
+    OLIVIndex::load($this->header->path,"article.idx");
 
     $articleName = (string)$header;
-    $langPath = $this->path . (string)$header->script->language;
-    $contentPath = $this->path . (string)$header->script->content;
+    $langPath = $this->header->path . (string)$header->script->language;
+    $contentPath = $this->header->path . (string)$header->script->content;
 
     OLIVText::load($langPath,$articleName);
 
-// parse for commands and parameters
-    if ($_argv[val])
-    {
-  // load editor
-      $this->loadScript("articleEdit.php",OLIV_MODULE_PATH . "article/");
-
-			$article = array(
-				"path" => $langPath,
-				"name" => $articleName,
-				"lang" => $_argv[lang]
-			);
-
-      $this->editor = new ArticleEditor($article);
-
-  // extract cmd and param
-      $this->paramArray = explode("/",cut_slash($_argv[val]));
-
-  // retranslate command
-      $this->command = OLIVText::getId($this->paramArray[0]);
-      array_shift($this->paramArray);
-    }
-
-// else render article
 
 // load content
     if (sessionfile_exists($contentPath . "$articleName.xml"))
     {
       $article = sessionxml_load_file($contentPath . "$articleName.xml");
-      $this->parse($article);
-    }
-    else
-      $this->o .= OLIVError::render("article.php - content for <b>'$articleName'</b> not found");
-  }
-  
-
-//------------------------------------------------------------------------------
-// parse text and create output
-  private function parse($text)
-  {
-    global $_argv;
-
-    if ($text)
-    {
-      $text = $text->text;
 
-      $owner = $text->attributes()->owner;
-      $ownerLang = $text->attributes()->lang;
 
+//echoall($article);
+      $this->o .= OLIVRender::template($article,"");
 
-//------------------------------------------------------------------------------
-//------------------------------------------------------------------------------
-// area for write, edit, admin
-// if write permission and original language differtent from OLIV_LANG
-      if (OLIVRight::w($text) and $ownerLang and $ownerLang != OLIV_LANG)
-      {
-        $flag = new simpleXmlElement("<flag><img src='flag' lang='$ownerLang' width='25px' float='right' margin_side='0.5em'/></flag>");
-
-        $options = array(
-          'url' => $_argv[url],
-          'param' => array(
-            "title" => "orig_lang",
-            "lang" => $ownerLang,
-            "val" => $_argv[val]
-          )
-        );
-        $this->o .= OLIVRoute::intern(OLIVImage::img($flag->img),$options);
-
-      }
-      
-
-      $options = array(
-        'url' => $_argv[url],
-        'param' => array(
-          "title" => "edit",
-          "val" => $_argv[val]
-        )
-      );
-
-//      $editIcon = new simpleXmlElement("<edit><img src='oliv_edit' width='20px' float='right' margin_side='0.5em'/></edit>");
-//			$this->o .= OLIVRoute::intern(OLIVImage::img($editIcon->img),$options);
-
-//TODO
-//echoall("owner: $owner");
-
-//------------------------------------------------------------------------------
-      $this->o .= $this->_parse($text);
+//      $this->parse($article);
     }
+    else
+      $this->o .= OLIVError::render("article.php - content for <b>'$articleName'</b> not found");
   }
   
-  
-// parse text part recursive
-  private function _parse($text)
-  {
-    global $_PLUGIN;
-    global $_argv;
-
-    $indexTimeStamp = (string)$text->attributes()->index;
-    $index = new OLIVIndex();
-
-    if ($text and count($text->children()))
-    {
-      foreach($text->children() as $entry)
-      {
-        $key = (string)$entry->getName();
-        $value = (string)$entry;
-
-//------------------------------------------------------------------------------
-// get render plugin if registered
-        $plugin = $_PLUGIN->render->func->$key;
-
-//print_r($key);
-        if ((string)$plugin)
-        {
-          $pluginFunc = (string)$plugin;
-          $pluginScript = (string)$plugin->attributes()->script;
-//echoall("call function $pluginFunc in plugin $pluginScript.php");
-
-          include_once (OLIV_CORE_PATH . OLIV_PLUGIN_PATH . $pluginScript . "/$pluginScript.php");
-
-          
-        }
-
-//------------------------------------------------------------------------------
-//TODO change all rendering to plugins
-
-        switch($key)
-        {
-// call render plugins
-          case img:
-            $o .= OLIVImage::img($value->img);
-            break;
 
-            
-          default:
-// insert text in index
-//            $index->insertText(OLIVText::_((string)$value),$_argv[url],$_argv[val]);
 
 
+//TODO move to rendering
 //------------------------------------------------------------------------------
-// insert edit field
-						$options = array(
-							'url' => $_argv[url],
-              'val' => OLIVText::_("edit") . "/$value",
-							'param' => array(
-								"title" => "edit",
-							)
-						);
-
-
-// get language code of text snippet and mark field if not translated
-						$lang = OLIVText::_($value,"lang");
-
-						if (($lang != OLIV_LANG) and $lang)
-							$class = "oliv_not_translated";
-						else
-							$class = "";								
+/*
 
 
 // call editor
@@ -226,50 +94,17 @@ class article extends OLIVCore
             {
               switch ($this->command)
               {
-                case edit:
+                case 'edit':
                   if ($this->paramArray[0] == $value)
                     $o .= $this->editor->open($value,OLIVText::_((string)$value));
                   break;
                   
-                case save:
+                case 'save':
                   $this->editor->saveSnippet($value);
                   break;
               }
             }
-
-//------------------------------------------------------------------------------
-// render text
-            else
-            {
-// output tag
-              $oTemp = "<$key name='$value' class='$class'>"; // start tag
-                // print language string if defined
-                if ($value)
-                  $oTemp .= OLIVText::_((string)$value);
-    
-                // call recursive if children
-                if (count($entry->children())) // recursive call
-                  $oTemp .= $this->_parse($entry);
-  
-              $oTemp .= "</$key>"; // end tag
-              
-              $o .= OLIVRoute::intern($oTemp,$options);
-            }
-          break;
-        }
-      }
-    }
-    $path = OLIV_CORE_PATH . OLIV_SESSION_PATH . OLIV_SESSION . $this->path;
-
-// write index;
-/*    $xml = $index->index->asXML();
-    $fHandler = fopen($path . "article.idx","w");
-    fputs($fHandler,$xml);
-    fclose($fHandler);*/
-    
-    return $o;
-  }
-  
+*/  
   
 // scan session for articles
 // module must be loaded
@@ -279,19 +114,19 @@ class article extends OLIVCore
 
 		$_ARTICLES = array();
 
-    $path = $this->path . "content/";
-    if ($pageDir = sessionopendir ($this->path))
+    $path = $this->header->path . "content/";
+    if ($pageDir = sessionopendir ($this->header->path))
     {
 
       while ($file = readdir($pageDir))
       {
-        if (is_dir($this->path . $file) and $file != "." and $file != "..")
+        if (is_dir($this->header->path . $file) and $file != "." and $file != "..")
         {
           // get define.xml
-          if (sessionfile_exists($this->path . $file . "/$file.xml"))
+          if (sessionfile_exists($this->header->path . $file . "/$file.xml"))
           {
-            $xml = sessionxml_load_file($this->path . $file . "/$file.xml");
-            $_ARTICLES[$file] = $xml;
+            $xml = sessionxml_load_file($this->header->path . $file . "/$file.xml");
+            $_ARTICLES['$file'] = $xml;
           }
         }
       }
diff --git a/module/article/articleEdit.php b/module/article/articleEdit.php
deleted file mode 100644
index 7048b9a..0000000
--- a/module/article/articleEdit.php
+++ /dev/null
@@ -1,106 +0,0 @@
-<?PHP
-//
-// OLIV
-//
-// This file is part of the OLIV Content Management System.
-//
-// Copyright(c) 2012 Thomas H Winkler
-// thomas.winkler@iggmp.net
-//
-// This file may be licensed under the terms of of the
-// GNU General Public License Version 3 (the ``GPL'').
-//
-// Software distributed under the License is distributed
-// on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either
-// express or implied. See the GPL for the specific language
-// governing rights and limitations.
-//
-// You should have received a copy of the GPL along with this
-// program. If not, go to http://www.gnu.org/licenses/gpl.html
-// or write to the Free Software Foundation, Inc.,
-// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
-//
-
-//------------------------------------------------------------------------------
-// Article module
-//
-// Version 0.1
-//------------------------------------------------------------------------------
-
-defined('OLIVCORE') or die ("mod_menu::menu.php - OLIVCore not present");
-defined('OLIVTEXT') or die ("mod_menu::menu.php - OLIVText not present");
-defined('OLIVERROR') or die ("mod_menu::menu.php - OLIVError not present");
-
-
-class ArticleEditor extends article
-{
-  var $o;
-	var $article;
-
-  function __construct($article)
-  {
-		$this->article = $article;
-
-		$lang = OLIVLang::family(OLIV_LANG); // lang code for tinyMCE
-
-// load scripts for tinyMCE
-    $this->loadScript("jquery-1.7.1.js",OLIV_JAVASCRIPT_PATH);
-    $this->loadScript("tiny_mce.js",OLIV_JAVASCRIPT_PATH . "tiny_mce/");
-
-// create editor
-?>
-		<script type="text/javascript">
-			tinyMCE.init({
-				mode : "textareas",
-				plugins : "save,paste",
-				width : "480",
-				theme : "advanced",
-				language : "<?PHP echo $lang; ?>",
-				theme_advanced_buttons1 : "save,cancel,|,undo,redo,|,cut,copy,paste",
-				theme_advanced_buttons2 : "",
-				theme_advanced_buttons3 : "",
-				theme_advanced_toolbar_location : "bottom",
-				theme_advanced_toolbar_align : "left"
-			});
-		</script>
-
-<?PHP
-  }
-  
-
-//------------------------------------------------------------------------------
-// open editor
-  function open($name,$text)
-  {
-    global $_argv;
-
-//TODO insert page link for positioning of scrolling to editor field
-    $options = array(
-      "url" => $_argv['url'],
-      "val" => OLIVText::_("save") . "/$name",
-    );
-
-    $actionUrl = OLIVRoute::url(OLIV_LANG,$options);
-
-//TODO use form method
-    $this->o .= "<form action='$actionUrl'><textarea name='text' width='50'>";
-      $this->o .= OLIVText::_((string)$text);
-    $this->o .= "</textarea></form>";
-
-    return $this->o;
-  }
-  
-
-
-  function saveSnippet($value)
-  {
-    global $_argv;
-
-//TODO save text in language file
-		echo("articleEditor::save => ");
-
-		olivxml_writeFile($value,$this->article['path'] . $this->article['name']);
-		echoall(" in " . $this->article['lang']); 
-  }
-}
-?>
diff --git a/module/article/articleEdit.php~ b/module/article/articleEdit.php~
index a4308f3..7048b9a 100644
--- a/module/article/articleEdit.php~
+++ b/module/article/articleEdit.php~
@@ -76,7 +76,7 @@ class ArticleEditor extends article
 
 //TODO insert page link for positioning of scrolling to editor field
     $options = array(
-      "url" => $_argv[url],
+      "url" => $_argv['url'],
       "val" => OLIVText::_("save") . "/$name",
     );
 
@@ -92,15 +92,15 @@ class ArticleEditor extends article
   
 
 
-  function save($value)
+  function saveSnippet($value)
   {
     global $_argv;
 
 //TODO save text in language file
 		echo("articleEditor::save => ");
 
-		olivxml_writeFile($value,$this->article[path] . $this->article[name]);
-		echoall(" in " . $this->article[lang]); 
+		olivxml_writeFile($value,$this->article['path'] . $this->article['name']);
+		echoall(" in " . $this->article['lang']); 
   }
 }
 ?>
diff --git a/module/article/articleRender.php b/module/article/articleRender.php
deleted file mode 100644
index e8179c5..0000000
--- a/module/article/articleRender.php
+++ /dev/null
@@ -1,48 +0,0 @@
-<?PHP
-//
-// OLIV
-//
-// This file is part of the OLIV Content Management System.
-//
-// Copyright(c) 2012 Thomas H Winkler
-// thomas.winkler@iggmp.net
-//
-// This file may be licensed under the terms of of the
-// GNU General Public License Version 3 (the ``GPL'').
-//
-// Software distributed under the License is distributed
-// on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either
-// express or implied. See the GPL for the specific language
-// governing rights and limitations.
-//
-// You should have received a copy of the GPL along with this
-// program. If not, go to http://www.gnu.org/licenses/gpl.html
-// or write to the Free Software Foundation, Inc.,
-// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
-//
-
-//------------------------------------------------------------------------------
-// Article rendering class
-//
-// Version 0.1
-//------------------------------------------------------------------------------
-
-defined('OLIVCORE') or die ("mod_menu::menu.php - OLIVCore not present");
-defined('OLIVTEXT') or die ("mod_menu::menu.php - OLIVText not present");
-defined('OLIVERROR') or die ("mod_menu::menu.php - OLIVError not present");
-
-class articleRender extends OLIVContent
-{
-	function __construct()
-	{
-	}
-
-
-	function _($func,$paramArray,$value)
-	{
-//		echoall("render $func");
-	}
-}
-
-?>
-
diff --git a/plugin/textPlugin/textPlugin.php b/plugin/textPlugin/textPlugin.php
index c47632b..c7a19aa 100644
--- a/plugin/textPlugin/textPlugin.php
+++ b/plugin/textPlugin/textPlugin.php
@@ -35,28 +35,86 @@ class textPlugin
   var $editor;
   
 //------------------------------------------------------------------------------
-// render functions
+// render class
   static public function __callStatic($tag,$options)
   {
     $content = $options[0];
     $value = $options[0]['template'];
 
-    return (textPlugin::tagString($tag,$value,$content));
+    return (textRender::tagString($tag,$value,$content));
   }
+}
+
+
+//------------------------------------------------------------------------------
+// edit render class
+class textEditPlugin
+{
+  static public function __callStatic($tag,$options)
+  {
+  	global $_argv;
+  	
+  	$o = "";
+    $content = $options[0];
+    $value = (string)$options[0]['template'];
+		
+    $tagArray = textRender::tagString($tag,$value,$content);
+
+
+// extract cmd and param
+    $paramArray = explode("/",cut_slash($_argv['val']));
+
+// retranslate command
+    $command = OLIVText::getId($paramArray[0]);
+    $partName = $paramArray[1];
+
+
+//------------------------------------------------------------------------------
+// call editor
+    if ($partName == $value)
+    {
+			$editor = new textEditor;
+      switch ($command)
+      {
+        case 'edit':
+          $tagArray['value'] = $editor->open($value,OLIVText::_((string)$value));
+          break;
+          
+        case 'save':
+          $editor->saveSnippet($value);
+          break;
+      }
+    }
+		else
+		{
+//------------------------------------------------------------------------------
+// render text
+// set link to start editor
+		  $urlOptions = array(
+		    "url" => $_argv['url'],
+		    "val" => OLIVText::_("edit") . "/$value",
+		  );
 
+		  $editUrl = OLIVRoute::url(OLIV_LANG,$urlOptions);
 
+			$tagArray['value'] = OLIVRoute::intern($tagArray['value'],$urlOptions);
+		}
 
+		return ($tagArray);
+  }
+}
 
 
 
 //------------------------------------------------------------------------------
-// create tag string
-  static private function tagString($tag,$value,$options)
+// render tag string
+class textRender
+{
+  static public function tagString($tag,$value,$options)
   {
 		$class = "";	
     $retArray = array();
 
-echoall("$tag $value");
 
     $content = $options['template'];
 // get language code of text snippet and mark field if not translated
@@ -80,100 +138,83 @@ echoall("$tag $value");
 
     return ($retArray);
   }
+}
 
 
-//TODO remove from plugin
-// do it in renderer
+//------------------------------------------------------------------------------
+// text editor class
+class textEditor
+{
+  var $o;
+	var $article;
+
+  function __construct()
+  {
+		$lang = OLIVLang::family(OLIV_LANG); // lang code for tinyMCE
+
+
+// load scripts for tinyMCE
+    OLIVCore::loadScript("jquery-1.7.1.js",OLIV_JAVASCRIPT_PATH);
+    OLIVCore::loadScript("tiny_mce.js",OLIV_JAVASCRIPT_PATH . "tiny_mce/");
+
+
+// create editor
+?>
+		<script type="text/javascript">
+			tinyMCE.init({
+				mode : "textareas",
+				plugins : "save,paste",
+				width : "480",
+				theme : "advanced",
+				language : "<?PHP echo $lang; ?>",
+				theme_advanced_buttons1 : "save,cancel,|,undo,redo,|,cut,copy,paste",
+				theme_advanced_buttons2 : "",
+				theme_advanced_buttons3 : "",
+				theme_advanced_toolbar_location : "bottom",
+				theme_advanced_toolbar_align : "left"
+			});
+		</script>
+
+<?PHP
+  }
+  
 
 //------------------------------------------------------------------------------
-// get language text
-// include editor if edit mode and rights
-/*  static private function getText($value,$header="")
+// open editor
+  function open($name,$text)
   {
     global $_argv;
-    
     $o = "";
-    $paramArray = array();
-
-    $articleName = (string)$header;
-    $path = OLIV_CORE_PATH . OLIV_SESSION_PATH . OLIV_SESSION . $header->path;
-    $langPath = $header->path . (string)$header->script->language;
-
-    $oTemp = OLIVText::_((string)$value);
-
-
-// parse for commands and parameters
-    if ($_argv['val'])
-    {
-// load editor class
-      OLIVCore::loadScript("articleEdit.php",OLIV_MODULE_PATH . "article/");
 
-			$article = array(
-				"path" => $langPath,
-				"name" => $articleName,
-				"lang" => $_argv['lang']
-			);
+//TODO insert page link for positioning of scrolling to editor field
+    $options = array(
+      "url" => $_argv['url'],
+      "val" => OLIVText::_("save") . "/$name",
+    );
 
-      $editor = new ArticleEditor($article);
+    $actionUrl = OLIVRoute::url(OLIV_LANG,$options);
 
-  // extract cmd and param
-      $paramArray = explode("/",cut_slash($_argv['val']));
-
-  // retranslate command
-      $command = OLIVText::getId($paramArray[0]);
-      array_shift($paramArray);
-    }
-
-
-
-
-// call editor
-    if (count($paramArray))
-    {
-      if ($paramArray[0] == $value)
-      {
-        switch ($command)
-        {
-          case 'edit':
-            if ($paramArray[0] == $value)
-              $o .= $editor->open($value,OLIVText::_((string)$value));
-            break;
-            
-          case 'save':
-            $editor->saveSnippet($value);
-            break;
-        }
-      }
-    }
-    
-		$options = array(
-			'url' => $_argv['url'],
-      'val' => OLIVText::_("edit") . "/$value",
-			'param' => array(
-				"title" => "edit",
-			)
-		);
-
-// create link to open editor
-    $o .= OLIVRoute::intern($oTemp,$options);
-
-    return ($o);
-  }*/
-}
+//TODO use form method
+    $o .= "<form action='$actionUrl'><textarea name='text' width='50'>";
+      $o .= OLIVText::_((string)$text);
+    $o .= "</textarea></form>";
 
+    return $o;
+  }
+  
 
 
-class textEditPlugin
-{
 //------------------------------------------------------------------------------
-// render functions
-  static public function __callStatic($tag,$options)
+// save text part
+  function saveSnippet($value)
   {
-    $content = $options[0];
-    $value = $options[0]['template'];
+    global $_argv;
+
+//TODO save text in language file
+		echo("textPlugin::save => ");
 
-    return (textPlugin::tagString($tag,$value,$content));
+		olivxml_writeFile($value,$this->article['path'] . $this->article['name']);
+		echoall(" in " . $this->article['lang']); 
   }
 }
-
-?>
\ No newline at end of file
+?>
diff --git a/plugin/textPlugin/textPlugin.php~ b/plugin/textPlugin/textPlugin.php~
new file mode 100644
index 0000000..7276517
--- /dev/null
+++ b/plugin/textPlugin/textPlugin.php~
@@ -0,0 +1,219 @@
+<?PHP
+//
+// OLIV
+//
+// This file is part of the OLIV Content Management System.
+//
+// Copyright(c) 2012 Thomas H Winkler
+// thomas.winkler@iggmp.net
+//
+// This file may be licensed under the terms of of the
+// GNU General Public License Version 3 (the ``GPL'').
+//
+// Software distributed under the License is distributed
+// on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either
+// express or implied. See the GPL for the specific language
+// governing rights and limitations.
+//
+// You should have received a copy of the GPL along with this
+// program. If not, go to http://www.gnu.org/licenses/gpl.html
+// or write to the Free Software Foundation, Inc.,
+// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+//
+
+//------------------------------------------------------------------------------
+// Preprocessor object
+//
+// Version 0.1
+//------------------------------------------------------------------------------
+
+defined('OLIVCORE') or die ("render.php - OLIVCore not present");
+defined('OLIVERROR') or die ("render.php - OLIVError not present");
+
+class textPlugin
+{
+  var $editor;
+  
+//------------------------------------------------------------------------------
+// render class
+  static public function __callStatic($tag,$options)
+  {
+    $content = $options[0];
+    $value = $options[0]['template'];
+
+    return (textRender::tagString($tag,$value,$content));
+  }
+}
+
+
+//------------------------------------------------------------------------------
+// edit render class
+class textEditPlugin
+{
+  static public function __callStatic($tag,$options)
+  {
+  	global $_argv;
+  	
+  	$o = "";
+    $content = $options[0];
+    $value = (string)$options[0]['template'];
+		
+    $tagArray = textRender::tagString($tag,$value,$content);
+
+
+// extract cmd and param
+    $paramArray = explode("/",cut_slash($_argv['val']));
+
+// retranslate command
+    $command = OLIVText::getId($paramArray[0]);
+    $partName = $paramArray[1];
+
+
+//------------------------------------------------------------------------------
+// call editor
+    if ($partName == $value)
+    {
+			$editor = new textEditor;
+      switch ($command)
+      {
+        case 'edit':
+          $tagArray['value'] = $editor->open($value,OLIVText::_((string)$value));
+          break;
+          
+        case 'save':
+          $editor->saveSnippet($value);
+          break;
+      }
+    }
+		else
+		{
+//------------------------------------------------------------------------------
+// render text
+// set link to start editor
+		  $urlOptions = array(
+		    "url" => $_argv['url'],
+		    "val" => OLIVText::_("edit") . "/$value",
+		  );
+
+		  $editUrl = OLIVRoute::url(OLIV_LANG,$urlOptions);
+
+			$tagArray['value'] = OLIVRoute::intern($tagArray['value'],$urlOptions);
+		}
+
+		return ($tagArray);
+  }
+}
+
+
+
+//------------------------------------------------------------------------------
+// render tag string
+class textRender
+{
+  static public function tagString($tag,$value,$options)
+  {
+		$class = "";	
+    $retArray = array();
+
+
+    $content = $options['template'];
+// get language code of text snippet and mark field if not translated
+		$lang = OLIVText::_($value,"lang");
+    $ownerLang = $content->attributes()->lang;
+
+
+//echoall("lang: $lang, ownerLang: $ownerLang, OLIV_LANG: " . OLIV_LANG);
+// check for permissions
+    if (OLIVRight::w($content) and $ownerLang and ($ownerLang != OLIV_LANG))
+    {
+
+  // mark for no translation
+  		if (($lang != OLIV_LANG) and OLIVText::_((string)$value))
+  			$class = "oliv_not_translated";
+    }
+
+    $retArray['startTag'] = "<$tag name='$value' class='$class'>";
+    $retArray['value'] = OLIVText::_((string)$value); // textPlugin::getText($value,$header);
+    $retArray['endTag'] = "</$tag>";
+
+    return ($retArray);
+  }
+}
+
+//------------------------------------------------------------------------------
+// text editor class
+class textEditor
+{
+  var $o;
+	var $article;
+
+  function __construct()
+  {
+		$lang = OLIVLang::family(OLIV_LANG); // lang code for tinyMCE
+
+
+// load scripts for tinyMCE
+    OLIVCore::loadScript("jquery-1.7.1.js",OLIV_JAVASCRIPT_PATH);
+    OLIVCore::loadScript("tiny_mce.js",OLIV_JAVASCRIPT_PATH . "tiny_mce/");
+
+
+// create editor
+?>
+		<script type="text/javascript">
+			tinyMCE.init({
+				mode : "textareas",
+				plugins : "save,paste",
+				width : "480",
+				theme : "advanced",
+				language : "<?PHP echo $lang; ?>",
+				theme_advanced_buttons1 : "save,cancel,|,undo,redo,|,cut,copy,paste",
+				theme_advanced_buttons2 : "",
+				theme_advanced_buttons3 : "",
+				theme_advanced_toolbar_location : "bottom",
+				theme_advanced_toolbar_align : "left"
+			});
+		</script>
+
+<?PHP
+  }
+  
+
+//------------------------------------------------------------------------------
+// open editor
+  function open($name,$text)
+  {
+    global $_argv;
+    $o = "";
+
+//TODO insert page link for positioning of scrolling to editor field
+    $options = array(
+      "url" => $_argv['url'],
+      "val" => OLIVText::_("save") . "/$name",
+    );
+
+    $actionUrl = OLIVRoute::url(OLIV_LANG,$options);
+
+//TODO use form method
+    $o .= "<form action='$actionUrl'><textarea name='text' width='50'>";
+      $o .= OLIVText::_((string)$text);
+    $o .= "</textarea></form>";
+
+    return $o;
+  }
+  
+
+
+//------------------------------------------------------------------------------
+// save text part
+  function saveSnippet($value)
+  {
+    global $_argv;
+
+//TODO save text in language file
+		echo("textPlugin::save => ");
+
+		olivxml_writeFile($value,$this->article['path'] . $this->article['name']);
+		echoall(" in " . $this->article['lang']); 
+  }
+}
+?>
